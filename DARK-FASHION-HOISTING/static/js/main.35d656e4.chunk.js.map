{"version":3,"sources":["components/CartTable/CartTable.js","components/CartTableData/CartTable.js","components/DataLoadFunc/LoadDataFunc.js","components/utilities/fakedb.js","components/CartPage/CartPage.js","components/Checkout/Checkout.js","components/Header/Header.js","components/Inventory/Inventory.js","components/NotFoundPage/NotFound.js","components/ProductsCards/Card.js","components/Shop/Shop.js","App.js","reportWebVitals.js","index.js"],"names":["CartTable","props","cartProductsQnt","totalQuantity","total","shipping","product","quantity","salePrice","tax","grandTotal","className","toFixed","children","CartTableData","name","image","id","width","height","src","alt","style","cursor","onClick","handleRemoveBtn","LoadData","useState","products","setProducts","useEffect","fetch","then","response","json","data","getDb","localStorage","getItem","updateDb","cart","setItem","JSON","stringify","getStoredCart","exists","parse","CartPage","useLoadData","setCart","history","useHistory","length","savedCart","storedCart","key","addedProducts","find","p","push","handleRemove","solidProduct","filter","prod","shopping_cart","deleteFromDb","scope","map","removeItem","alert","Checkout","Header","to","Inventory","NotFound","color","fontSize","Card","productInfo","regularPrice","ratting","readonly","initialRating","emptySymbol","fullSymbol","handleCartBtn","Shop","displayProducts","setDisplayProducts","console","log","productObject","existProd","pd","newCart","rest","newCount","addToDb","type","onChange","event","searchingText","target","value","searchingRasult","toLowerCase","includes","placeholder","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35d656e4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CartTable = (props) => {\r\nlet {cartProductsQnt} = props;\r\n\r\nlet totalQuantity = 0;\r\n\r\n\r\nlet total = 0;\r\nlet shipping = 0;\r\nfor(let product of cartProductsQnt){\r\n    if(!product.quantity){\r\n        product.quantity = 1;\r\n    }\r\n    total = total + product.salePrice * product.quantity;\r\n    totalQuantity = totalQuantity + product.quantity;\r\n    shipping = (total / 100) * 5;\r\n} \r\n\r\n\r\nlet tax = ((total + shipping) / 100) * 5;\r\nlet grandTotal = total + shipping + tax;\r\n\r\n    return (\r\n        <div className=\"shoppingCart\">\r\n        <div className=\"cartTable\">\r\n        <div className=\"tableItems\">\r\n            <span className=\"item\">Cart Items &nbsp;&nbsp;: </span><br />\r\n            <span className=\"item\">Total Price &nbsp;&nbsp;: </span><br />\r\n            <span className=\"item\">Shipping &nbsp;&nbsp;: </span><br />\r\n            <span className=\"item\">Tax &nbsp;&nbsp;: </span><br />\r\n            <span className=\"item\">Grand Total: </span>\r\n        </div>\r\n        <div className=\"tableValues\">\r\n            <span className=\"item\">{totalQuantity}</span><br />\r\n            <span className=\"item\">$ {total.toFixed(2)}</span><br />\r\n            <span className=\"item\">$ {shipping.toFixed(2)}</span><br />\r\n            <span className=\"item\">$ {tax.toFixed(2)}</span><br />\r\n            <span className=\"item\">$ {grandTotal.toFixed(2)}</span>\r\n        </div>   \r\n        </div>\r\n        {props.children}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default CartTable;","import React from 'react';\r\n\r\nconst CartTableData = (props) => {\r\n    let {name, salePrice, quantity, image, id} = props.product;\r\n    return (\r\n  <tbody className=\" text-dark fs-3\">\r\n    <tr>\r\n      <td><img className=\"rounded-circle\" width=\"100\" height=\"100\" src={image} alt=\"\" /></td>\r\n      <td>{name}</td>\r\n      <td>$ {salePrice}</td>\r\n      <td>{quantity} Pice</td>\r\n      <td><span style={{cursor:\"pointer\"}} onClick={() => props.handleRemoveBtn(id)} className=\"fas fa-trash text-danger\"></span></td>\r\n    </tr>\r\n  </tbody>\r\n    );\r\n};\r\n\r\nexport default CartTableData;","import { useState, useEffect } from \"react\";\r\n\r\nlet LoadData = () => {\r\n// This state for dispaly data in browser \r\nlet [products, setProducts] = useState([]);\r\n// Let's get data from database using useffect \r\n   useEffect( () => {\r\n      // Let's get the data from json file using fetch api \r\n      fetch('./products.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n         setProducts(data);\r\n      });\r\n   }, []);\r\n   return [products];\r\n}\r\n\r\nexport default LoadData;\r\n","// use local storage as your db for now\r\nconst addToDb = id => {\r\n    const exists = getDb();\r\n    let shopping_cart = {};\r\n    if (!exists) {\r\n      shopping_cart[id] = 1;\r\n    }\r\n    else {\r\n      shopping_cart = JSON.parse(exists);\r\n      if (shopping_cart[id]) {\r\n        const newCount = shopping_cart[id] + 1;\r\n        shopping_cart[id] = newCount;\r\n      }\r\n      else {\r\n        shopping_cart[id] = 1;\r\n      }\r\n    }\r\n    updateDb(shopping_cart);\r\n  }\r\n  \r\n  const getDb = () => localStorage.getItem('shopping_cart');\r\n  const updateDb = cart => {\r\n    localStorage.setItem('shopping_cart', JSON.stringify(cart));\r\n  }\r\n  \r\n  const removeFromDb = id => {\r\n    const exists = getDb();\r\n    if (!exists) {\r\n  \r\n    }\r\n    else {\r\n      const shopping_cart = JSON.parse(exists);\r\n      delete shopping_cart[id];\r\n      updateDb(shopping_cart);\r\n    }\r\n  }\r\n  \r\n  const getStoredCart = () => {\r\n    const exists = getDb();\r\n    return exists ? JSON.parse(exists) : {};\r\n  }\r\n  \r\n  const clearTheCart = () => {\r\n    localStorage.removeItem('shopping_cart');\r\n  }\r\n  \r\n  export { addToDb, removeFromDb as deleteFromDb, clearTheCart, getStoredCart }\r\n  ","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CartTable from '../CartTable/CartTable';\r\nimport CartTableData from '../CartTableData/CartTable';\r\nimport useLoadData from '../DataLoadFunc/LoadDataFunc';\r\nimport { clearTheCart, deleteFromDb, getStoredCart } from '../utilities/fakedb';\r\n\r\nconst CartPage = () => {\r\n    let [products] = useLoadData();\r\n    let [cart, setCart] = useState([]);\r\n    \r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n        if(products.length){\r\n        let savedCart = getStoredCart();\r\n        let storedCart = [];\r\n        for(let key in savedCart){\r\n       let addedProducts = products.find(p => p.id === key );\r\n       \r\n       if(addedProducts){\r\n          const quantity = savedCart[key];\r\n          addedProducts.quantity = quantity;\r\n         // Reassign cart products\r\n         storedCart.push(addedProducts);\r\n        //  console.log(addedProducts);\r\n        }\r\n        }\r\n        setCart(storedCart);\r\n        }\r\n      \r\n     }, [products]);\r\n     \r\n     let handleRemove = id => {\r\n       let solidProduct = cart.filter(prod => prod.id !== id);\r\n       setCart(solidProduct);\r\n       deleteFromDb(id);\r\n     }\r\n\r\n     let handleCheckout = () => {\r\n      if(cart.length > 0){\r\n        setCart([]);\r\n        clearTheCart();\r\n        history.push(\"/checkout\");\r\n      }else{\r\n        alert(\"Please add to cart some product first!\");\r\n      }\r\n\r\n     }\r\n    return (\r\n        <div className=\"carttbl mt-5\">\r\n              <h1>Cart Page && Cart Products</h1>\r\n            <div className=\"row px-3 mt-5\">\r\n              <div className=\"col-lg-9 col-md-9 col-sm-12\">\r\n                <table className=\"table\">\r\n                  <thead className=\"bg-dark text-white\">\r\n                    <tr>\r\n                      <th scope=\"col\">Image</th>\r\n                      <th scope=\"col\">Product Name</th>\r\n                      <th scope=\"col\">Unit Price</th>\r\n                      <th scope=\"col\">Quantity</th>\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  {\r\n                    cart.map(product => <CartTableData key={product.id} handleRemoveBtn={handleRemove} product={product} />)\r\n                  } \r\n                  </table>\r\n                </div>\r\n                <div className=\"col-lg-2 col-md-2 col-sm-12\">\r\n                  <CartTable cartProductsQnt={cart}>\r\n                    <button onClick={handleCheckout} className=\"cartBtn w-100\">Checkout Now</button>\r\n                    </CartTable>\r\n                </div>\r\n              </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default CartPage;","import React from 'react';\r\nconst Checkout = () => {\r\n    return (\r\n        <div className=\"checkoutPage\">\r\n            <h1 className=\"thanksTag\"> Thank you for your ordering. You will get it very soon!</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n        <header>\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center\">\r\n                  <div className=\"col-lg-2 col-md-2 col-sm-2 d-flex align-items-center\">\r\n                    <div className=\"logo\">\r\n                       <h3 className=\"logo\">Dark Fshon</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-10 col-md-10 col-sm-10 text-right\">\r\n                  <nav className=\"text-right\">\r\n                      <Link to=\"/home\">Home</Link>\r\n                      <Link to=\"/cart\">Cart</Link>\r\n                      <Link to=\"/inventory\">Inventory</Link>\r\n\r\n                  </nav>\r\n                </div>\r\n                </div>\r\n\r\n            </div>\r\n        </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Inventory = () => {\r\n    return (\r\n        <div>\r\n            <h1>Hello. I'm from inventory manage page!</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Inventory;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"notFoundPage\">\r\n            <h1 style={{color: \"red\", fontSize: \"30px\"}}>Hello. Your Page Not Found!</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport Rating from 'react-rating';\r\n\r\nconst Card = (props) => {\r\n    // Let's destructure the products data\r\n\r\n     let {image, name, regularPrice, salePrice, ratting} = props.productInfo;\r\n    return (\r\n        <div className=\"col-lg-4 col-md-4 col-sm-10\">\r\n        <div className=\"productCard\">\r\n           <div className=\"productImage\">\r\n               <img src={image} alt=\"images\" />\r\n            </div>\r\n             <div className=\"productDetails\">\r\n                <h2 className=\"title\">{name}</h2>\r\n                <span className=\"regularPrice\">$ {regularPrice}</span>\r\n                <span className=\"salePrice\">$ {salePrice}</span>\r\n                <span className=\"rattings\">\r\n                    <Rating readonly\r\n                      initialRating={ratting}\r\n                    emptySymbol=\"far fa-star\"\r\n                    fullSymbol=\"fas fa-star\"\r\n                    />\r\n                    </span><br />\r\n                <button className=\"cartBtn\" onClick={() => props.handleCartBtn(props.productInfo)}>Add To Cart</button>\r\n             </div>\r\n          </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React, { useEffect, useState } from 'react';\r\nimport CartTable from '../CartTable/CartTable';\r\nimport Card from '../ProductsCards/Card';\r\nimport './Shop.css';\r\nimport {useHistory} from 'react-router-dom';\r\nimport {addToDb, getStoredCart} from '../utilities/fakedb';\r\nconst Shop = () => {\r\n   // This state for dispaly data in browser \r\n   let [products, setProducts] = useState([]);\r\n   // This state for add product to cart \r\n   let [cart, setCart] = useState([]);\r\n   \r\n   // Use useHistory for conditional routing \r\n   let history = useHistory();\r\n\r\n   let handleCart = () => {\r\n      if(cart.length > 0){\r\n         history.push(\"/cart\");\r\n      }else{\r\n         alert('Plaese add to cart some product first!');\r\n      }\r\n   }\r\n   //Search Products State\r\n   let [displayProducts, setDisplayProducts] = useState([]);\r\n   // Let's get data from database using useffect \r\n   useEffect( () => {\r\n      // Let's get the data from json file using fetch api \r\n      fetch('./products.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n         setProducts(data);\r\n         setDisplayProducts(data);\r\n      });\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n\r\n      if(products.length){\r\n      let savedCart = getStoredCart();\r\n      let storedCart = [];\r\n      for(let key in savedCart){\r\n     let addedProducts = products.find(p => p.id === key );\r\n     \r\n     if(addedProducts){\r\n        const quantity = savedCart[key];\r\n        addedProducts.quantity = quantity;\r\n       // Reassign cart products\r\n       storedCart.push(addedProducts);\r\n       console.log(addedProducts);\r\n      }\r\n      }\r\n      setCart(storedCart);\r\n      }\r\n    \r\n   }, [products]);\r\n\r\n   // This Handle function for adding data to data base\r\n   let handleCartBtn = (productObject) => {\r\n      let existProd = cart.find(pd => pd.id === productObject.id);\r\n      let newCart = [];\r\n      if(existProd){\r\n         let rest = cart.filter(pd => pd.id !== productObject.id);\r\n         existProd.quantity = existProd.quantity + 1;\r\n         newCart = [...rest, productObject];\r\n      }else{\r\n         productObject.quantity = 1;\r\n         newCart = [...cart, productObject];\r\n      }\r\n      setCart(newCart);\r\n      \r\n      // Save Cart Cookie to localStorage \r\n      addToDb(productObject.id);\r\n\r\n   }\r\n    \r\n   let handleSearchEvent = event => {\r\n     let searchingText = event.target.value;\r\n     let searchingRasult = products.filter(product => product.name.toLowerCase().includes(searchingText.toLowerCase()));\r\n   //   console.log(searchingRasult.length);\r\n   setDisplayProducts(searchingRasult);\r\n   }\r\n    return (\r\n        <main className=\"mainContent\">\r\n            <div className=\"row w-100 justify-content-between\">\r\n            <div className=\"col-lg-9 col-md-9 col-sm-12 px-4\">\r\n               <div className=\"div\">\r\n                  <div className=\"dataDetails\">\r\n                     <span className=\"totalData\">Total products found : {displayProducts.length}</span>\r\n                     <input type=\"search\" onChange={handleSearchEvent} placeholder=\"Search your products...\" />\r\n                  </div>\r\n               </div>\r\n                <div className=\"row\">\r\n\r\n                  {\r\n                  //  Let's map the getting data from database or json file \r\n                  \r\n                     displayProducts.map(product => <Card   productInfo={product} handleCartBtn={handleCartBtn} key={product.id}/>)\r\n                  }\r\n                  </div>\r\n              </div>\r\n                <div className=\"col-lg-2 col-md-2 col-sm-6\">\r\n                  <CartTable cartProductsQnt={cart}>\r\n                    <button onClick={handleCart} className=\"cartBtn w-100\">View Cart</button>\r\n                   </CartTable>\r\n                </div>\r\n              </div>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Shop;","import { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport CartPage from './components/CartPage/CartPage';\nimport Checkout from './components/Checkout/Checkout';\nimport Header from './components/Header/Header';\nimport Inventory from './components/Inventory/Inventory';\nimport NotFound from './components/NotFoundPage/NotFound';\nimport Shop from './components/Shop/Shop';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Shop />\n          </Route>\n          <Route exact path=\"/home\">\n            <Shop />\n          </Route>\n          <Route exact path=\"/cart\">\n            <CartPage />  \n          </Route>\n          <Route exact path=\"/inventory\">\n            <Inventory />\n          </Route>\n          <Route path=\"/checkout\">\n            <Checkout />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}